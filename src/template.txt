=====Default Template=====
import React from 'react';
import { makeStyles } from '@material-ui/core/styles';

const useStyles = makeStyles((theme) => ({

}));
export default function Header() {
	const classes = useStyles();
	return(
		<div>

		</div>
	);
}
=====Image Card=====
import React from 'react';
import { Collapse, Icon, Grid, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography, } from '@material-ui/core'
import { makeStyles } from '@material-ui/core/styles';

import blogs from '../static/blogs';

const useStyles = makeStyles((theme) => ({
  root: {
		maxWidth: 645,
		background: 'rgba(0,0,0,0.5)',
		margin: '20px',
		flexGrow: 1,
		padding: theme.spacing(2)
  },
  media: {
    height: 440,
	},
	title: {
		fontFamily: 'Nunito',
		fontWeight: 'bold',
		fontSize: '2rem',
		color: '#fff',
	},
	desc: {
		fontFamily: 'Nunito',
		fontSize: '1.1rem',
		color: '#ddd',
	},
	button: {
		margin: theme.spacing(2),
	},
}));

export default function ImageCard({ blogPost, checked }) {
  const classes = useStyles();
	const blogPosts = blogs;
  return (
		<Grid
			container
			spacing={2}
			direction="row"
			justify="flex-start"
			alignItems="flex-start"
		>
			{blogs.map(elem => (
				<Grid
					item
					xs={12}
					sm={6}
					md={3}
					key={blogs.indexOf(elem)}
				>
					
				</Grid>
			))}
		</Grid>
		<Collapse in={checked} {...(checked ? { timeout: 1000 } : {})}>
			<Card className={classes.root}>
				{/* <CardActionArea> */}
					<CardMedia
						className={classes.media}
						image={blogPost.imageUrl}
						title="Contemplative Reptile"
					/>
					<CardContent>
						<Typography 
							gutterBottom 
							variant="h5" 
							component="h2"
							className={classes.title}
						>
							{blogPost.title}
						</Typography>
						<Typography 
							variant="body2" 
							color="textSecondary" 
							component="p"
							className={classes.desc}
						>
							{blogPost.description}
						</Typography>
					</CardContent>
				{/* </CardActionArea> */}
				<CardActions>
					<Button variant="contained" color="secondary" className={classes.button} >
						Share
					</Button>
					<Button variant="contained"  color="secondary" className={classes.button}>
						Read More ...
					</Button>
				</CardActions>
			</Card>
		</Collapse>
  );
}

=====App.js - Trial & Error from Navigation=====
export default function App() {
  const classes = useStyles();
  return(
    // <Router>
    <div className={classes.root}>
      <CssBaseline />
      <Header />
      {/* <nav>
        <li>
          <Link to='/blogs'>BLOGSS</Link>
        </li>
      </nav>
      <Switch>
        <Route exact path='/'></Route>
        <Route path='/blogs'><BlogPage /></Route>
      </Switch> */}
      
        {/* <Switch> */}
          {/* <Route path='/' exact/> */}
          {/* <Route path='/blogs'>
            <BlogPage />
          </Route> */}
          {/* <Route path='/blogs' component={BlogPage}/> */}
        {/* </Switch> */}

      <Post />
      <Project />
    </div>
    // </Router>
  );
}

===== Original Navbar from Header.js =====
<HideOnScroll>
				<AppBar className={classes.appbar} elevation={0} position="fixed">
					<Toolbar className={classes.appbarWrapper}>
						<Container className={classes.navbarDisplayFlex}>
							<Link className={classes.appbarTitle} href="/">
								<h1>
									Danniel<span className={classes.colorText}> Hansel</span>
								</h1>
							</Link>
							<Hidden smDown>
								<List component="nav" aria-labelledby="main navigation" className={classes.navDisplayFlex}>
									{/* <li><a className={classes.linkText} href="/BlogPage">BLOG</a></li>
									<li><Links to='/blogs' >BLOGS</Links></li> */}
									{navLinks.map(({ title, path }) => (
										// <li><a href={path} key={title} className={classes.linkText} >
												<li><a href={path} key={title} className={classes.linkText} >
													<Scroll to={path} smooth={true}>
														<ListItem button >
															<ListItemText primary={title}/>
														</ListItem>
													</Scroll>
												</a></li>
									))}
								</List>
								{/* <Route path='/blogs'><BlogPage /></Route> */}
								{/* <Button  to='/blog' component={Links} className={classes.navButtons} value="blog">
									Blogs
								</Button>
								<Button  href='/' component={Links} className={classes.navButtons}>
									Projects
								</Button>
								<Button  href='/' component={Links} className={classes.navButtons}>
									About
								</Button>
								<Button  href='/' component={Links} className={classes.navButtons}>
									Contact
								</Button> */}
							</Hidden>
							<Hidden mdUp>
								<SideDrawer navLinks={navLinks}/>
							</Hidden>
						</Container>
					</Toolbar>
				</AppBar>
			</HideOnScroll>

===== Second Navbar =====
const Navbar = () => {
	const [ open, setOpen ] = useState(false);
	const classes = useStyles();

	const sideList = () => (
		<Box className={classes.menuSliderContainer} component="div">
			<Avatar className={classes.avatar} src={avatar} alt="Danniel Hansel" />
			<Divider />
			<List>
				{menuItems.map((item, i) => (
					<ListItem
						button
						key={i}
						className={classes.listItem}
						onClick={() => setOpen(false)}
						component={Link}
						to={item.listPath}
					>
						<ListItemIcon className={classes.listItem}>
							{item.listIcon}
						</ListItemIcon>
						<ListItemText primary = {item.listText} />
					</ListItem>
				))}
			</List>
		</Box>
	);

	return(
		<React.Fragment>
			<Box component='nav'>
				<AppBar position='static' className={classes.appbar}>
					<Toolbar>
						<IconButton onClick={() => setOpen(true)}>
							<ArrowBack className={classes.arrow} />
						</IconButton>
						<Typography variant="h5" className={classes.title}>
							Danniel Hansel
						</Typography>
					</Toolbar>
				</AppBar>
			</Box>
			<Drawer open={open} anchor="right" onClose={() => setOpen(false)}>
				{sideList()}
				<Footer />
			</Drawer>
		</React.Fragment>
	)
};

===== Original SideDrawer =====
const SideDrawer = ({ navLinks }) => {
	const classes = useStyles();
	const [ state, setState ] = useState({ right: false });

	const toggleDrawer = (anchor, open) => event => {
		if (
			event.type === "keydown" &&
			(event.type === "Tab" || event.key === "Shift")
		) {
			return
		}
		setState({ [anchor]: open}) //This anchor is MUI props to decide the drawer slide in from top, left, right, or bottom.
	}

	const sideDrawerList = anchor => (
		<div
			className={classes.list}
			role="presentation"
			onClick={toggleDrawer(anchor, false)}
			onKeyDown={toggleDrawer(anchor, false)}
			>
			<List component="nav" className={classes.sideDrawerFlex}>
				{navLinks.map(({ title, path }) => (
					<a href={path} key={title} className={classes.linkText} >
						<ListItem button >
							<ListItemText primary={title} />
						</ListItem>
					</a>
				))}
			</List>
		</div>
	)
	return(
		<React.Fragment>
			<IconButton 
				edge="start" 
				aria-label="menu"
				onClick={toggleDrawer("right", true)}
				>
				<Menu fontSize="large" style={{ color: `white` }}/>
			</IconButton>
			<Drawer
				anchor="right"
				open={state.right}
				onOpen={toggleDrawer("right", true)}
				onClose={toggleDrawer("right", false)}
			>
				{sideDrawerList("right")}
			</Drawer>
		</React.Fragment>
	)
}

===== Original Header.js ======
const Header = () => {
	const classes = useStyles();
	const [ checked, setChecked ] = useState(false);
	useEffect(() => {
		setChecked(true)
	})
	return(
		<div className={classes.root} id='header'>
			<Toolbar id="back-to-top-anchor" />
			<BackToTop>
				<Fab color="secondary" size="large" aria-label="scroll back to top" >
					<KeyboardArrowUp />
				</Fab>
			</BackToTop>			
			<Collapse 
				in={checked} 
				{...(checked ? { timeout: 1000 } : {})}
				collapsedHeight={50}
				>
				<div className={classes.container}>
					<h1 className={classes.title}>
						Welcome to <br /> My
						<span className={classes.colorText}>Website!</span>
					</h1>
					<Scroll to='blog-posts' smooth={true}>
						<IconButton>
							<ExpandMoreIcon className={classes.goDown}/>
						</IconButton>
					</Scroll>
				</div>
			</Collapse>
		</div>
	);
}